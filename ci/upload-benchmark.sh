#!/usr/bin/env bash

set -e

usage() {
  cat <<EOF >&2
USAGE:
    $0 <BENCHMARK_FILEPATH>

REQUIRED ENVIRONMENTS:
    INFLUX_HOST           Hostname or IP address of the InfluxDB server
    INFLUX_DB             Name of the InfluxDB database
    INFLUX_USER           Username for InfluxDB
    INFLUX_PASSWORD       Password for InfluxDB
    INFLUX_MEASUREMENT    Measurement for InfluxDB

OPTIONAL ENVIRONMENTS:
    COMMIT_HASH   Commit hash of the benchmark file
    TEST_SUITE    The group name for all tests in the benchmark file

ARGS:
    <BENCHMARK_FILEPATH>    The output file generated by running
                            \`cargo bench -- -Z unstable-options --format=json\`
                            contains the benchmark results in JSON format
EOF
}

print_error_and_exit() {
  local msg="$1"
  echo "error: $msg" >&2
  echo ""
  usage
  exit 1
}

check_env() {
  local var_name="$1"
  if [ -z "${!var_name}" ]; then
    print_error_and_exit "Environment variable $var_name is required"
  fi
}

filepath="$1"
if [ ! -f "$filepath" ]; then
  print_error_and_exit "invalid <BENCHMARK_FILEPATH>"
fi

if [ -z "$COMMIT_HASH" ]; then
  COMMIT_HASH=$(uuidgen)
fi

if [ -z "$TEST_SUITE" ]; then
  TEST_SUITE="$(basename "${BENCHMARK_FILEPATH}")-$(date +%s)"
fi

required_env_vars=(
  "INFLUX_HOST"
  "INFLUX_DB"
  "INFLUX_USER"
  "INFLUX_PASSWORD"
  "INFLUX_MEASUREMENT"
)
for var in "${required_env_vars[@]}"; do
  check_env "$var"
done

while IFS= read -r line; do
  type=$(echo "$line" | jq -r '.type')

  if [ "$type" == "bench" ]; then
    name=$(echo "$line" | jq -r '.name')
    median=$(echo "$line" | jq -r '.median')
    deviation=$(echo "$line" | jq -r '.deviation')

    datapoint="${INFLUX_MEASUREMENT},commit=${COMMIT_HASH},test_suite=${TEST_SUITE} name=\"$name\",median=${median}i,deviation=${deviation}i"
    echo "datapoint: $datapoint"

    curl -X POST "${INFLUX_HOST}/write?db=${INFLUX_DB}" --data-binary "$datapoint"
  fi
done <"$filepath"
